apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "app.fullname" . }}
  labels:
    app: {{ template "app.name" . }}
    chart: {{ template "app.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ default 1 .Values.replicaCount }}
  revisionHistoryLimit: {{ default 3 .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ template "app.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "app.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{- if .Values.imageCredentials }}
      imagePullSecrets:
        - name: {{ template "app.fullname" $ }}-registrykey
      {{- end }}
      {{- if .Values.migration }}
      {{- if .Values.migration.enabled }}
      initContainers:
        - name: {{ .Chart.Name }}-migration
        {{- if .Values.migration.image }}
          image: "{{ .Values.migration.image.repository }}:{{ .Values.migration.image.tag }}"
          imagePullPolicy: {{ .Values.migration.image.pullPolicy }}
        {{- else -}}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- end }}
          envFrom:
            - configMapRef:
                name: {{ template "app.fullname" $ }}-env
          command: {{ .Values.migration.command }}
          args: {{ .Values.migration.args }}
          {{- if .Values.secrets }}
          env:
          {{- range .Values.secrets }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .ref.name }}
                  key: {{ .ref.key }}
          {{- end }}
          {{- end }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command: {{ toYaml .Values.command }}
          {{- end }}
          {{- if .Values.args }}
          args: {{ toYaml .Values.args }}
          {{- end }}
          {{- if .Values.secrets }}
          env:
          {{- range .Values.secrets }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .ref.name }}
                  key: {{ .ref.key }}
          {{- end }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ template "app.fullname" $ }}-env
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- if .Values.probes.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path | default "/" }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path | default "/" }}
              port: http
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
